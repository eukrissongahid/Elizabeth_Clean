<div class='max-w-6xl mx-auto p-6'>
  <div class='flex flex-col md:flex-row gap-8'>
    <!-- Gallery Section -->
    <div class='flex flex-col md:flex-row md:w-4/6 gap-4 max-h-[500px] md:max-h-96'>
      <!-- Main Image -->
      <div class='w-full md:w-3/4 rounded-lg overflow-hidden border border-gray-200 shadow-sm h-[350px] md:h-full'>
        <img
          id='mainImage'
          src='{% assign first_image = product.media | where: 'media_type', 'image' | first %}{{ first_image | image_url: width: 800 }}'
          alt='{% if first_image %}{{ first_image.alt | escape }}{% else %}Product Image{% endif %}'
          class='w-full h-full object-cover'
        >
      </div>

      <!-- Thumbnails -->
      <div class='w-full md:w-[130px]'>
        <div
          class='flex gap-6.5 w-full overflow-x-auto pt-2 md:flex-col md:overflow-x-hidden md:overflow-y-auto md:pt-0 h-full scroll-smooth'
          style='-webkit-overflow-scrolling: touch;'
        >
          {% for media in product.media %}
            {% if media.media_type == 'image' %}
              <div class='thumb flex-none w-[100px] rounded-md border border-gray-200 shadow-sm cursor-pointer {% if forloop.first %}active{% endif %}'>
                <img
                  src='{{ media | image_url: width: 150 }}'
                  alt='{{ media.alt | escape }}'
                  data-large='{{ media | image_url: width: 800 }}'
                  class='block w-[100px] h-[100px] object-cover rounded-md'
                >
              </div>
            {% endif %}
          {% endfor %}
        </div>
      </div>
    </div>

    <!-- Vertical Divider -->
    <div class='hidden md:block w-px border border-orange-400 mx-2'></div>

    <!-- Product Info Section -->
    <div class='md:w-2/6 space-y-6 p-4 bg-gray-100 rounded-md'>
      <h1 class='text-2xl font-semibold text-orange-700'>{{ product.title }}</h1>

      <product-variant-selector
        id='variantSelector'
        variants='{{ product.variants | json | escape }}'
        options='{{ product.options | json | escape }}'
      ></product-variant-selector>

      <!-- Action Buttons -->
      <div class='flex flex-col sm:flex-row gap-3'>
        <button class='bg-orange-500 hover:bg-orange-600 text-white font-medium py-2 px-4 rounded cursor-pointer'>
          Add to Cart
        </button>
        <button class='bg-black hover:bg-gray-900 text-white font-medium py-2 px-4 rounded cursor-pointer'>
          Buy Now
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Thumbnail click handler: update main image and active thumbnail class
    document.querySelectorAll('.thumb').forEach((thumb) => {
      thumb.addEventListener('click', () => {
        document.querySelectorAll('.thumb').forEach((t) => t.classList.remove('active'));
        thumb.classList.add('active');
        const mainImage = document.getElementById('mainImage');
        const img = thumb.querySelector('img');
        mainImage.src = img.dataset.large;
        mainImage.alt = img.alt;
      });
    });

    const variantSelector = document.getElementById('variantSelector');
    let selectedVariantId = null;
    let selectedQuantity = 1;

    variantSelector.addEventListener('variant-change', (e) => {
      selectedVariantId = e.detail.variantId;
      selectedQuantity = e.detail.quantity;
    });

    // Initialize variant selector price and selected variant on load
    if (variantSelector && typeof variantSelector.updateSelectedVariantAndPrice === 'function') {
      variantSelector.updateSelectedVariantAndPrice();
    }

    // Add to Cart button handler
    document.querySelector('button.bg-orange-500').addEventListener('click', async () => {
      if (!selectedVariantId) {
        alert('Please select a valid variant.');
        return;
      }
      if (selectedQuantity <= 0) {
        alert('Please add a quantity.');
        return;
      }
      try {
        const response = await fetch('/cart/add.js', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ id: selectedVariantId, quantity: selectedQuantity })
        });
        if (response.ok) {
          alert('Added to cart!');
        } else {
          const error = await response.json();
          alert(`Error: ${error.description}`);
        }
      } catch (err) {
        alert('An error occurred while adding to cart.');
        console.error(err);
      }
    });

    // Buy Now button handler
    document.querySelector('button.bg-black').addEventListener('click', async () => {
      if (!selectedVariantId) {
        alert('Please select a variant.');
        return;
      }
      try {
        await fetch('/cart/clear.js', { method: 'POST' });
        await fetch('/cart/add.js', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ id: selectedVariantId, quantity: selectedQuantity })
        });
        window.location.href = '/checkout';
      } catch (err) {
        alert('An error occurred during checkout.');
        console.error(err);
      }
    });
  });
</script>
